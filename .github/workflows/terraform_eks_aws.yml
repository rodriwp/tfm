name: AWS Terraform
on:
  workflow_dispatch:
    inputs:
      applyTerraform:
        description: "Run Terraform Apply"
        required: true
        default: false
        type: boolean
      onEnvironment:
        type: choice
        description: "Environments to perform terraform apply"
        options:
          - all
          - managed-cloud
        required: true
        default: all
  push:
    branches:
      - 'main'
    paths:
      - "terraform/**"
  pull_request:
    types: [opened, synchronize, reopened]
env:
  entrypoint: 0_aws_terraform

jobs:
  terraform-plan-all:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    if: github.event.inputs.applyTerraform != 'true'
    strategy:
      matrix:
        env: [managed-cloud]
        region: [eu-central-1]
      fail-fast: false
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - name: Plan AWS terraform
        uses: ./.github/workflows/composite/deploy-terraform
        with:
          entrypoint: ${{ env.entrypoint}}
          region: ${{ matrix.region}}
          environment: ${{ matrix.env}}
          TF_API_TOKEN: ${{ secrets.TERRAFORM_API_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          runApply: false
          workingDirectory: ./terraform/${{ env.entrypoint}}

  terraform-apply-all:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: github.event.inputs.applyTerraform == 'true' && github.event.inputs.onEnvironment == 'all'
    strategy:
      matrix:
        env: [ managed-cloud ]
        region: [ eu-central-1 ]
      fail-fast: false
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - name: Plan AWS terraform
        uses: ./.github/workflows/composite/deploy-terraform
        with:
          entrypoint: ${{ env.entrypoint}}
          region: ${{ matrix.region}}
          environment: ${{ matrix.env}}
          TF_API_TOKEN: ${{ secrets.TERRAFORM_API_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          runApply: true
          workingDirectory: ./terraform/${{ env.entrypoint}}

  terraform-apply-one-env:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    if: github.event.inputs.applyTerraform == 'true' && github.event.inputs.onEnvironment != 'all'
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
      - name: Plan AWS terraform
        uses: ./.github/workflows/composite/deploy-terraform
        with:
          entrypoint: ${{ env.entrypoint}}
          region: ${{ matrix.region}}
          environment: ${{ github.event.inputs.onEnvironment}}
          TF_API_TOKEN: ${{ secrets.TERRAFORM_API_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          runApply: true
          workingDirectory: ./terraform/${{ env.entrypoint}}